
import { GoogleGenAI } from "@google/genai";

if (!process.env.API_KEY) {
    throw new Error("API_KEY environment variable is not set.");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

export const generatePixelArt = async (userPrompt: string): Promise<string> => {
    // Enhance the prompt to guide the model towards a specific pixel art style
    const detailedPrompt = `A vibrant, detailed, 16-bit pixel art of: ${userPrompt}. Clean lines, retro gaming aesthetic, masterpiece.`;
    
    try {
        const response = await ai.models.generateImages({
            model: 'imagen-3.0-generate-002',
            prompt: detailedPrompt,
            config: {
                numberOfImages: 1,
                outputMimeType: 'image/png',
                aspectRatio: '1:1',
            },
        });

        if (!response.generatedImages || response.generatedImages.length === 0) {
            throw new Error("No image was generated by the API.");
        }
        
        const base64ImageBytes: string = response.generatedImages[0].image.imageBytes;
        return `data:image/png;base64,${base64ImageBytes}`;

    } catch (error) {
        console.error("Error generating image with Gemini:", error);
        throw new Error("API call to generate image failed.");
    }
};
